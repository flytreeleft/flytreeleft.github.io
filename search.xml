<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[Nginx特例场景配置]]></title>
      <url>/the-special-case-configuration-of-nginx/</url>
      <content type="html"><![CDATA[<h2 id="Nginx代理第三方http站点静态资源文件"><a href="#Nginx代理第三方http站点静态资源文件" class="headerlink" title="Nginx代理第三方http站点静态资源文件"></a>Nginx代理第三方http站点静态资源文件</h2><p>这几天为部门搭建好了Maven仓库，为了便于指导部门同事能够准确配置并启用私有仓库，然后就打算写一份使用说明文档。</p>
<p>我不太喜欢写Word，也好几年几乎没用过了，一般都是直接写在部门的<a href="https://www.mediawiki.org/" target="_blank" rel="noopener">Wiki</a>系统上。不过，一份简单的文档写到Wiki上又不太方便查阅，于是找了找可以在单个HTML里写<a href="https://en.wikipedia.org/wiki/Markdown" target="_blank" rel="noopener">Markdown</a>并直接渲染展示的方案。</p>
<p>很快我就找到了<a href="https://github.com/chaitin/strapdown-zeta" target="_blank" rel="noopener">Strapdown Zeta</a>，其对Mardown的支持较为全面，并且使用很简单，还提供多套主题可自由切换。需要提到的是该库为<a href="https://github.com/arturadib/strapdown" target="_blank" rel="noopener">Strapdown</a>的衍生与改进版本，而<code>Strapdown</code>已经很长时间未更新了，选择<code>Strapdown Zeta</code>也是看重其活跃度。</p>
<a id="more"></a>
<p>在<code>Strapdown Zeta</code>的支持下仅需在<code>&lt;xmp&gt;&lt;/xmp&gt;</code>标签中编写Markdown并在最后引入 <a href="http://cdn.ztx.io/strapdown/strapdown.min.js" target="_blank" rel="noopener">http://cdn.ztx.io/strapdown/strapdown.min.js</a> 脚本即可。可惜的是，作者提供的该站点并未启用HTTPS，而我们在<a href="https://letsencrypt.org/" target="_blank" rel="noopener">Let’s Encrypt</a>的帮助下已经对部门的所有站点启用了HTTPS。这样，若在页面中引用非HTTPS资源，浏览器默认将阻止该资源的下载。</p>
<p>显然，这里不能直接在页面中引入该脚本，但是我也不愿再在站点上部署除使用文档之外的其他文件，就仅仅一个HTML文件即可，css什么的都不要有。</p>
<p>百般思索后，突然想到<a href="https://archive.org/" target="_blank" rel="noopener">Internet Archive</a>可以代理访问其他站点的页面，那我也可以专门为第三方静态资源搭建一个代理服务，该站点自身是HTTPS的，其在服务端获取到目标资源再返回给浏览器，这样该资源也就走的是HTTPS，既不用在服务器上存储这些资源，也可以自由代理其他第三方资源，而且不用管目标是不是HTTPS，甚至还可以代理一些无法访问到的资源。简单、经济、又实惠！:)</p>
<p>于是动手！这里假设代理站点为<code>https://static.example.com</code>，并构造代理链接为<code>https://static.example.com/*/&lt;target url&gt;</code>形式，这种结构可以方便Nginx做Location匹配，同时在使用和修改上均十分简单，我们不用改变目标资源的URL地址。</p>
<p>这里直接放出完整的配置：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen 443 ssl;</span><br><span class="line">    listen [::]:443 ssl;</span><br><span class="line"></span><br><span class="line">    server_name static.example.com;</span><br><span class="line"></span><br><span class="line">    include /etc/nginx/vhost.d/static.example.com/01_ssl.conf;</span><br><span class="line"></span><br><span class="line">    # https://static.example.com/*/http://others.com/asset.js -&gt; http://others.com/asset.js</span><br><span class="line">    ## https://www.mediasuite.co.nz/blog/proxying-s3-downloads-nginx/</span><br><span class="line">    location ~* ^/\*/(http[s]?):?/(.*?)/(.*)$ &#123;</span><br><span class="line">        # Note: Remove the directive &apos;internal;&apos; to accept the external requests,</span><br><span class="line">        #       otherwise it will return 404 for the external requests.</span><br><span class="line">        #       See http://nginx.org/en/docs/http/ngx_http_core_module.html#internal</span><br><span class="line">        set $backend_protocol   $1;</span><br><span class="line">        set $backend_host       $2;</span><br><span class="line">        set $backend_path       $3;</span><br><span class="line">        set $backend_uri        $backend_host/$backend_path$is_args$args;</span><br><span class="line">        set $backend_url        $backend_protocol://$backend_uri;</span><br><span class="line"></span><br><span class="line">        # Headers for the remote server, unset Authorization and Cookie for security reasons.</span><br><span class="line">        proxy_set_header Host $backend_host;</span><br><span class="line">        proxy_set_header Authorization &apos;&apos;;</span><br><span class="line">        proxy_set_header Cookie &apos;&apos;;</span><br><span class="line"></span><br><span class="line">        # Stops the local disk from being written to (just forwards data through)</span><br><span class="line">        proxy_max_temp_file_size 0;</span><br><span class="line"></span><br><span class="line">        proxy_pass $backend_url;</span><br><span class="line"></span><br><span class="line">        proxy_intercept_errors on;</span><br><span class="line">        error_page 301 302 307 = @handle_backend_redirect;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    # Nginx Embedded Variables: http://nginx.org/en/docs/varindex.html</span><br><span class="line">    location @handle_backend_redirect &#123;</span><br><span class="line">        return 302 $scheme://$host/*/$upstream_http_location;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>该配置参考的是<a href="https://www.mediasuite.co.nz/blog/proxying-s3-downloads-nginx/" target="_blank" rel="noopener">Using NGINX’s X-Accel with Remote URLs</a>。这里没有做特别的改动，主要是针对我们的实际需求做了些调整：</p>
<ul>
<li>去掉了<code>internal;</code>指令，该指令是限制仅能在Nginx内部做该代理请求，而我们是需要外部直接获取到目标资源的，因此，需要去掉该指令，否则，外部访问时将始终为<code>404</code>；</li>
<li>针对目标URL地址存在重定向问题，在<code>@handle_backend_redirect</code>中，我又将重定向地址（其对应变量<code>$upstream_http_location</code>）再次进行代理，这样无论目标跳转多少次，代理站点均能获取到最终的返回内容，而不是在浏览器中又突然跳到另一个HTTP链接了；</li>
</ul>
<p>最后提醒大家一点是，在网络中对安全要时刻保持警惕，尽可能降低敏感数据泄漏的风险，因此，这里切忌不要将客户端的<code>Authorization</code>和<code>Cookie</code>转发到目标站点了。</p>
<h2 id="Nginx通过Squid穿透防火墙（Nginx-bypass-firewall-via-Squid）"><a href="#Nginx通过Squid穿透防火墙（Nginx-bypass-firewall-via-Squid）" class="headerlink" title="Nginx通过Squid穿透防火墙（Nginx bypass firewall via Squid）"></a>Nginx通过Squid穿透防火墙（Nginx bypass firewall via Squid）</h2><p><strong>Google关键字</strong>：<code>nginx http_proxy</code>。其中，<code>http_proxy</code>为Linux中配置启用正向代理的环境变量，很多命令可识别该变量并通过所设定的代理地址请求目标资源。</p>
<p>在前面提到，为了将HTTP请求转换为HTTPS请求，我专门搭建了个静态文件代理站点。刚开始访问还很正常，可后来便发现公司网关阻止了服务器对外部网站的访问，导致编写的文档无法渲染。</p>
<p>因此，我便考虑在Nginx服务端通过Squid（其他代理服务也可）再做一次代理以穿透公司的防火墙，确保静态资源的代理不再出现问题。</p>
<p>在多次尝试以及搜索网络资料后终于发现<a href="https://serverfault.com/questions/583743/how-to-make-an-existing-caching-nginx-proxy-use-another-proxy-to-bypass-a-firewa#683955" target="_blank" rel="noopener">How to make an existing caching Nginx proxy use another proxy to bypass a firewall?</a>所提到的实现方法。</p>
<p>在原配置的基础上综合改进后，得到新的配置内容如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen 443 ssl;</span><br><span class="line">    listen [::]:443 ssl;</span><br><span class="line"></span><br><span class="line">    server_name static.example.com;</span><br><span class="line"></span><br><span class="line">    include /etc/nginx/vhost.d/static.example.com/01_ssl.conf;</span><br><span class="line"></span><br><span class="line">    # https://static.example.com/*/http://others.com/asset.js -&gt; http://others.com/asset.js</span><br><span class="line">    ## https://www.mediasuite.co.nz/blog/proxying-s3-downloads-nginx/</span><br><span class="line">    location ~* ^/\*/(http[s]?):?/(.*?)/(.*)$ &#123;</span><br><span class="line">        # Note: Remove the directive &apos;internal;&apos; to accept the external requests,</span><br><span class="line">        #       otherwise it will return 404 for the external requests.</span><br><span class="line">        #       See http://nginx.org/en/docs/http/ngx_http_core_module.html#internal</span><br><span class="line">        set $backend_protocol   $1;</span><br><span class="line">        set $backend_host       $2;</span><br><span class="line">        set $backend_path       $3;</span><br><span class="line">        set $backend_uri        $backend_host/$backend_path$is_args$args;</span><br><span class="line">        set $backend_url        $backend_protocol://$backend_uri;</span><br><span class="line"></span><br><span class="line">        # Headers for the remote server, unset Authorization and Cookie for security reasons.</span><br><span class="line">        proxy_set_header Host $backend_host;</span><br><span class="line">        proxy_set_header Authorization &apos;&apos;;</span><br><span class="line">        proxy_set_header Cookie &apos;&apos;;</span><br><span class="line"></span><br><span class="line">        # Stops the local disk from being written to (just forwards data through)</span><br><span class="line">        proxy_max_temp_file_size 0;</span><br><span class="line"></span><br><span class="line">        # Forward the target to the squid proxy</span><br><span class="line">        ## https://serverfault.com/questions/583743/how-to-make-an-existing-caching-nginx-proxy-use-another-proxy-to-bypass-a-firewa#683955</span><br><span class="line">        ## Hide the reponse header to protect the backend proxy</span><br><span class="line">        ### http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_hide_header</span><br><span class="line">        proxy_hide_header Via;</span><br><span class="line">        proxy_hide_header X-Cache;</span><br><span class="line">        proxy_hide_header X-Cache-Hits;</span><br><span class="line">        proxy_hide_header X-Cache-Lookup;</span><br><span class="line">        proxy_hide_header X-Fastly-Request-ID;</span><br><span class="line">        proxy_hide_header X-Served-By;</span><br><span class="line">        proxy_hide_header X-Timer;</span><br><span class="line">        rewrite ^(.*)$      &quot;://$backend_uri&quot;           break;</span><br><span class="line">        rewrite ^(.*)$      &quot;$backend_protocol$1&quot;       break;</span><br><span class="line">        proxy_pass http://&lt;squid ip&gt;:3128;</span><br><span class="line"></span><br><span class="line">        # Proxy to the target directly</span><br><span class="line">        #proxy_pass $backend_url;</span><br><span class="line"></span><br><span class="line">        proxy_intercept_errors on;</span><br><span class="line">        error_page 301 302 307 = @handle_backend_redirect;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    # Nginx Embedded Variables: http://nginx.org/en/docs/varindex.html</span><br><span class="line">    location @handle_backend_redirect &#123;</span><br><span class="line">        return 302 $scheme://$host/*/$upstream_http_location;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>这里需要特别注意的是：</p>
<ul>
<li>这里做了两次<code>rewrite</code>是为了确保能够准确将目标URL地址附加到Squid的代理地址中以构成<code>http://&lt;squid ip&gt;:3128/&lt;target url&gt;</code>形式，同时，规避了因在<a href="http://nginx.org/en/docs/http/ngx_http_rewrite_module.html#rewrite" target="_blank" rel="noopener"><code>rewrite</code></a>的替换字符串中包含<code>http://</code>、<code>https://</code>或<code>$scheme</code>而导致重定向的问题；</li>
<li>同样为了安全考虑，这里隐藏了Squid的几个响应头，避免客户端得到Squid的真实IP地址而产生潜在的攻击风险；</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 运维管理 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Nginx配置 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[未来社会形态畅想]]></title>
      <url>/the-future-social-formation/</url>
      <content type="html"><![CDATA[<blockquote>
<p>The post isn’t finished yet, it will be updated anytime!</p>
</blockquote>
<h2 id="无现金社会"><a href="#无现金社会" class="headerlink" title="无现金社会"></a>无现金社会</h2><p>提要：</p>
<ul>
<li>比特币、比特交易网络</li>
<li><a href="https://www.ethereum.org/" target="_blank" rel="noopener">以太坊</a></li>
<li><a href="http://www.iotachina.com/what-is-iota" target="_blank" rel="noopener">IOTA</a><ul>
<li><a href="http://www.iotachina.com/ruhezhaohuiiotayue.html" target="_blank" rel="noopener">如何找回IOTA余额</a>：可以从中了解转账机制与流程</li>
</ul>
</li>
</ul>
<a id="more"></a>
<h2 id="自由工作"><a href="#自由工作" class="headerlink" title="自由工作"></a>自由工作</h2><p>提要：</p>
<ul>
<li>为个人价值体现、兴趣、探索未知而工作，而不是为了生活和生存</li>
<li>社会基础能够保障个人衣食无忧，确保个人在任何时刻都无需担心温饱和居住问题，从而有精力专注于思考和探索上<ul>
<li>种植、生产、制造、输送流程实现全自动化、机械化</li>
</ul>
</li>
<li>自由选择工作时间、工作地点，不为特定的个人、团体、组织、企业工作，仅为达到某个目标而做事并获得对等回报</li>
</ul>
<h2 id="万物互联"><a href="#万物互联" class="headerlink" title="万物互联"></a>万物互联</h2><p>提要：</p>
<ul>
<li>联网的每个设备既为内容消费端，也是内容存储端，同时也是网络热点，附近的设备可随时且自由地连接在一起</li>
<li>基于内容进行网络访问，而不再基于IP或域名，任何端点都可能含有所需内容，就近选择并从该端点下载内容即可，内容原始发布端将无关紧要</li>
<li>分布式、无中心化的基础网络，不再需要路由器、交换机、服务器等中心设备</li>
<li>初始阶段需要通过ISP打通各个闭环网络（闭环的连接设备群组），当多个闭环网络连接形成足够大的闭环后，设备之间的通信将无需ISP的支持<ul>
<li>家用路由器等可自由共享网络，助推「万物网」的形成</li>
</ul>
</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 社会形态 </category>
            
            <category> 未来世界 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 无现金社会 </tag>
            
            <tag> 无中心化 </tag>
            
            <tag> 万物互联 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[作恶行为清单]]></title>
      <url>/the-evil-behaviors/</url>
      <content type="html"><![CDATA[<blockquote>
<p>列举日常和网络中所发现的软件、应用、服务等的「作恶」行为，将其永久钉在「耻辱柱」上。有条件的或有候选方案的，应主动弃用之！<br>坚持开放、坚持自由。点击下载<a href="http://mirror.lihnidos.org/GNU/savannah/blug/fsfs-zh/fsfs-zh.pdf" target="_blank" rel="noopener">自由软件自由社会.pdf</a><br>就事论事，不针对个人、企业、平台，挖掘现象本质，努力尝试寻找更优方案</p>
</blockquote>
<h2 id="为逼迫用户使用客户端而阉割Web端的基本功能"><a href="#为逼迫用户使用客户端而阉割Web端的基本功能" class="headerlink" title="为逼迫用户使用客户端而阉割Web端的基本功能"></a>为逼迫用户使用客户端而阉割Web端的基本功能</h2><ul>
<li>案例： <a href="https://2.taobao.com/" target="_blank" rel="noopener">闲鱼</a>Web端隐藏搜索框</li>
<li>来源： <a href="https://www.appinn.com/xianyu-search-box/" target="_blank" rel="noopener">https://www.appinn.com/xianyu-search-box/</a></li>
<li>评语： 若欲达KPI，必先「中二自宫」<a id="more"></a>
</li>
</ul>
<p><img src="/assets/images/the-evil-behaviors/xianyu-hide-itself-search-form-of-web-client.png" alt="闲鱼Web端隐藏搜索框截图@2017-12-05"></p>
<h2 id="封闭平台之间因为利益互怼，以用户为筹码逼迫对方作出让步"><a href="#封闭平台之间因为利益互怼，以用户为筹码逼迫对方作出让步" class="headerlink" title="封闭平台之间因为利益互怼，以用户为筹码逼迫对方作出让步"></a>封闭平台之间因为利益互怼，以用户为筹码逼迫对方作出让步</h2><ul>
<li>案例： 谷歌<a href="https://youtube.com" target="_blank" rel="noopener">Youtube</a>禁止亚马逊<a href="https://developer.amazon.com/echo" target="_blank" rel="noopener">Echo</a>访问</li>
<li>来源： <a href="http://www.ifanr.com/951314" target="_blank" rel="noopener">http://www.ifanr.com/951314</a></li>
<li>相关： <a href="https://zh.wikipedia.org/wiki/%E5%A5%87%E8%99%8E360%E4%B8%8E%E8%85%BE%E8%AE%AFQQ%E4%BA%89%E6%96%97%E4%BA%8B%E4%BB%B6" target="_blank" rel="noopener">360与QQ大战</a>、<a href="http://wiki.mbalib.com/wiki/%E9%A1%BA%E4%B8%B0%E8%8F%9C%E9%B8%9F%E4%B9%8B%E4%BA%89" target="_blank" rel="noopener">菜鸟与顺丰互怼</a></li>
<li>评语： 用户在我手，天下跟我走。看不惯？你咬我呀！</li>
<li>观点： 在「封闭平台」中，用户从一开始便是平台的筹码，当平台「自认为」利益受到其他平台威胁时，便会不惜以损害用户体验的方式进行反击，其平日讨好用户的伪善面目便暴露无疑。平台越大，心眼越小，不安全感越严重，思路越单一，解决问题的方式越是直接粗暴。</li>
</ul>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[软件开发最佳实践]]></title>
      <url>/the-better-software-development-practice/</url>
      <content type="html"><![CDATA[<blockquote>
<p>The post isn’t finished yet, it will be updated anytime!</p>
</blockquote>
<a id="more"></a>
]]></content>
      
        <categories>
            
            <category> 开发规范 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[软件开发行为准则]]></title>
      <url>/the-software-development-criterion/</url>
      <content type="html"><![CDATA[<blockquote>
<p>The post isn’t finished yet, it will be updated anytime!</p>
</blockquote>
<h2 id="谨慎对待用户隐私"><a href="#谨慎对待用户隐私" class="headerlink" title="谨慎对待用户隐私"></a>谨慎对待用户隐私</h2><p>提要：</p>
<ul>
<li>不是仅用户确认后的数据才算是「用户隐私」，任何与用户相关的数据都应该「默认」视为用户隐私，<u>不需要任何形式的确认</u>，<br>而只有经过用户确认和同意的数据方可用作其他用途，且前提必须是明确告知数据为何要做次用途，以及将被如何利用、涉及哪些风险等</li>
</ul>
<a id="more"></a>
<h2 id="努力降低总体开发和使用成本"><a href="#努力降低总体开发和使用成本" class="headerlink" title="努力降低总体开发和使用成本"></a>努力降低总体开发和使用成本</h2><p>提要：</p>
<ul>
<li>总体成本等于所有个人的时间成本与财力物力之总和</li>
<li>提供到达/完成目标的最短操作路径<ul>
<li>提供详细的文档（开发、设计、使用），备注相关知识来源链接，从最终使用者角度考虑使用流程、会遇到的困难和疑问、期望的快捷方式</li>
<li>将当前关注点在一页（一屏）中展示；直接到达操作按钮；</li>
<li>从开发者与最终用户的角度思考各个关注点，直接提供所需信息、接口、说明以及软件功能</li>
<li>不是一眼就明了其意义的图标需提供文字提示或说明，或者直接使用文字</li>
</ul>
</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 开发规范 </category>
            
            <category> 职业道德 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 隐私 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[如何突破自己的瓶颈？]]></title>
      <url>/how-to-break-out-of-your-limit/</url>
      <content type="html"><![CDATA[<blockquote>
<p>The post isn’t finished yet, it will be updated anytime!</p>
</blockquote>
<h2 id="以旁观者角度审视自己"><a href="#以旁观者角度审视自己" class="headerlink" title="以旁观者角度审视自己"></a>以旁观者角度审视自己</h2><p>提要：</p>
<ul>
<li>勇敢面对自己，正视自己的缺点</li>
<li>客观分析自己的好的、坏的甚至是邪恶的想法，不好的想法切不可影响到他人，需要自我消化</li>
<li>人无完人，对于非理性情绪不要过分压抑，在不影响他人的情况下采取各种积极或消极的方式去释放这些情绪<ul>
<li>消极的释放方式所要达到的目的是推翻重建，进入全新的境界，从而从另一个视角看待原来的情绪和行为</li>
</ul>
</li>
</ul>
<a id="more"></a>
<h2 id="理性看待他人的评论、观点和建议，保持就事论事的态度，切忌带有个人情绪，更不要被别人带着走（影响个人情绪、怀疑个人价值观等等）"><a href="#理性看待他人的评论、观点和建议，保持就事论事的态度，切忌带有个人情绪，更不要被别人带着走（影响个人情绪、怀疑个人价值观等等）" class="headerlink" title="理性看待他人的评论、观点和建议，保持就事论事的态度，切忌带有个人情绪，更不要被别人带着走（影响个人情绪、怀疑个人价值观等等）"></a>理性看待他人的评论、观点和建议，保持就事论事的态度，切忌带有个人情绪，更不要被别人带着走（影响个人情绪、怀疑个人价值观等等）</h2><p>提要：</p>
<ul>
<li>若无法静心并保持客观，那就禁用评论，不与人争论，专注于自己的思考方向，但需多接触不同观点，及时调整，不可过于执念</li>
<li>开放心态，放下恩怨是非，求同存异</li>
<li>事物的美好在于不同，不同的观点、思想的碰撞才能产生激烈的火花，而消灭差异最终只会沦为「行尸走肉」</li>
<li>「尊重你说话的权利，但也保留我的个人意见」</li>
<li>没有绝对的对错，对错都是相对的，在不同身份、不同环境、不同角度甚至可能发生反转。依据当前已知信息作出相对合理的选择，并在实践过程中不断调整</li>
</ul>
<h2 id="专注于探索自己的生活方式和方向，不羡慕别人的生活，先过好自己的"><a href="#专注于探索自己的生活方式和方向，不羡慕别人的生活，先过好自己的" class="headerlink" title="专注于探索自己的生活方式和方向，不羡慕别人的生活，先过好自己的"></a>专注于探索自己的生活方式和方向，不羡慕别人的生活，先过好自己的</h2><p>提要：</p>
<ul>
<li>时常在朋友圈、新闻、他人口中看到或听到某某光鲜亮丽、幸福美满、事业猛进，而自己依然处于迷茫、混沌、一人吃饱全家不饿的状态，心里倍感失落、感觉就是一loser，进而嫉妒别人，甚而诅咒他人</li>
<li>那你需要静下来分析，如何形成当前局面，自己真正需要的是什么，自己在生活的路上做了什么</li>
<li>别人都在幸福的路上忙碌奔波，而你却有如此闲心去妒嫉别人的生活？</li>
<li>人人都有自己的活法，也有不同的满足，找到属于自己的，并聚焦于此，为此而忙碌，心无杂念</li>
<li>以“出世”的态度去观察他人和自己，不要觉得自己过得不如意就希望全世界都得与你一起面对种种不如意，从他人的不幸中去寻找优越感，将会使自己越来越失败、愤恨、怀疑自己。不断战胜、超越自己才是正途</li>
<li>始终保持内心的平静，避免外界对自己的诱惑和干扰，要有自己的坚守，纯粹的名与利终究是带不走的</li>
<li>沉下心来专注于自己的事情，朝着自己认为可行的方向前行，也许会失败，但在行进过程中同样也能学到很多东西，所以，不要一开始就因为害怕失败而不去做，先勇敢地去做，快速尝试以快速失败或成功</li>
</ul>
<h2 id="对所见、所听、所接触的事、物、人，取其精华去其糟泊，吸收有用可取的方式，探索本质，获得处事之道"><a href="#对所见、所听、所接触的事、物、人，取其精华去其糟泊，吸收有用可取的方式，探索本质，获得处事之道" class="headerlink" title="对所见、所听、所接触的事、物、人，取其精华去其糟泊，吸收有用可取的方式，探索本质，获得处事之道"></a>对所见、所听、所接触的事、物、人，取其精华去其糟泊，吸收有用可取的方式，探索本质，获得处事之道</h2><p>提要：</p>
<ul>
<li>有些人就是人生路上的“小怪兽”，有些人是良师益友</li>
</ul>
<h2 id="随时准备两件事情，以避免当前事情完成后不知道该继续做什么的困境"><a href="#随时准备两件事情，以避免当前事情完成后不知道该继续做什么的困境" class="headerlink" title="随时准备两件事情，以避免当前事情完成后不知道该继续做什么的困境"></a>随时准备两件事情，以避免当前事情完成后不知道该继续做什么的困境</h2><h2 id="准备一份阅读书籍列表，在无所事事时，避免无目的的刷网页，转而看书会更加有益"><a href="#准备一份阅读书籍列表，在无所事事时，避免无目的的刷网页，转而看书会更加有益" class="headerlink" title="准备一份阅读书籍列表，在无所事事时，避免无目的的刷网页，转而看书会更加有益"></a>准备一份阅读书籍列表，在无所事事时，避免无目的的刷网页，转而看书会更加有益</h2>]]></content>
      
        <categories>
            
            <category> 自我剖析 </category>
            
            <category> 人性探索 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 自我 </tag>
            
            <tag> 静心 </tag>
            
            <tag> 优越感 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Git使用案例]]></title>
      <url>/git-usage-cases/</url>
      <content type="html"><![CDATA[<h2 id="拆分子目录到新仓库"><a href="#拆分子目录到新仓库" class="headerlink" title="拆分子目录到新仓库"></a>拆分子目录到新仓库</h2><h3 id="场景"><a href="#场景" class="headerlink" title="场景"></a>场景</h3><p>通常为便于项目开发和调试，开发前期会将多个组件放在同一仓库中，而当各个组件的功能结构和代码逐渐区域稳定后，<br>便需要将其拆分出来进行独立开发和管理，以便于与其他项目共享组件。</p>
<p>此时，不仅需要将组件所在目录内的代码全部拆分到单独的仓库，同时，还需要确保历史记录能够完整保留。</p>
<a id="more"></a>
<h3 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Clone the repository that contains the subfolder.</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/USERNAME/REPOSITORY-NAME</span><br><span class="line"><span class="built_in">cd</span> REPOSITORY-NAME</span><br><span class="line"></span><br><span class="line"><span class="comment"># To filter out the subfolder from the rest of the files in the repository</span></span><br><span class="line"><span class="comment">## FOLDER-NAME: The folder within your project that you'd like to create a separate repository from.</span></span><br><span class="line"><span class="comment">## BRANCH-NAME: The default branch for your current project, for example, 'master' or 'gh-pages'</span></span><br><span class="line">git filter-branch --prune-empty --subdirectory-filter FOLDER-NAME BRANCH-NAME</span><br><span class="line"></span><br><span class="line"><span class="comment"># Change the existing remote 'origin' (or other name) URL to the new repository URL</span></span><br><span class="line">git remote <span class="built_in">set</span>-url origin https://github.com/USERNAME/NEW-REPOSITORY-NAME.git</span><br><span class="line"></span><br><span class="line"><span class="comment"># [Optional] Change BRANCH-NAME to the default branch (e.g. 'master') of the new repository</span></span><br><span class="line">git branch -m BRANCH-NAME master</span><br><span class="line"></span><br><span class="line"><span class="comment"># Push your changes to the new repository</span></span><br><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure>
<p><strong>注意</strong>：</p>
<ul>
<li>在第二步操作后，当前目录将会只剩下子目录中的文件</li>
<li>最好在新的目录中进行上述操作：可以直接clone，也可以从复制已有项目到其他目录</li>
</ul>
<h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><ul>
<li><a href="https://help.github.com/articles/splitting-a-subfolder-out-into-a-new-repository/" target="_blank" rel="noopener">Splitting a subfolder out into a new repository</a></li>
</ul>
<h2 id="修改变更提交人的信息"><a href="#修改变更提交人的信息" class="headerlink" title="修改变更提交人的信息"></a>修改变更提交人的信息</h2><h3 id="场景-1"><a href="#场景-1" class="headerlink" title="场景"></a>场景</h3><p>基于项目长远发展考虑，将某个具有实用价值且吸引力极大的项目开源，<br>需要将项目从公司内部仓库开放到Github上，但相关开发人员在两个系统中所用帐号不一致，<br>为了便于issue交流以及PR提交，这时，需要更改历史中的提交人信息。</p>
<p>其实，大多数时候，很可能是要弃用内部仓库并将工作全部移到公共仓库时才有这么做的需求，其余情况并不需要这么做。</p>
<h3 id="操作-1"><a href="#操作-1" class="headerlink" title="操作"></a>操作</h3><ul>
<li>部分替换：</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">git filter-branch --commit-filter \</span><br><span class="line">        <span class="string">'if [ "$GIT_AUTHOR_NAME" = "OldAuthor Name" ]; then \</span></span><br><span class="line"><span class="string">             export GIT_AUTHOR_NAME="Author Name"; \</span></span><br><span class="line"><span class="string">             export GIT_AUTHOR_EMAIL=authorEmail@example.com; \</span></span><br><span class="line"><span class="string">             export GIT_COMMITTER_NAME="Commmiter Name"; \</span></span><br><span class="line"><span class="string">             export GIT_COMMITTER_EMAIL=commiterEmail@example.com; \</span></span><br><span class="line"><span class="string">         fi; \</span></span><br><span class="line"><span class="string">         git commit-tree "$@" '</span></span><br><span class="line"><span class="comment"># Push to the branch 'master' of the existing repository</span></span><br><span class="line">git push --force origin master</span><br></pre></td></tr></table></figure>
<ul>
<li>全部替换：</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">git filter-branch --commit-filter \</span><br><span class="line">        <span class="string">'export GIT_AUTHOR_NAME="Author Name"; \</span></span><br><span class="line"><span class="string">         export GIT_AUTHOR_EMAIL=authorEmail@example.com; \</span></span><br><span class="line"><span class="string">         export GIT_COMMITTER_NAME="Commmiter Name"; \</span></span><br><span class="line"><span class="string">         export GIT_COMMITTER_EMAIL=commiterEmail@example.com; \</span></span><br><span class="line"><span class="string">         git commit-tree "$@" '</span></span><br><span class="line"><span class="comment"># Push to the branch 'master' of the existing repository</span></span><br><span class="line">git push --force origin master</span><br></pre></td></tr></table></figure>
<p><strong>注意</strong>：</p>
<ul>
<li>若出现类似<code>Cannot create a new backup. A previous backup already exists in refs/original/. Force overwriting the backup with -f</code>的异常提示，则需要在<code>filter-branch</code>命令中添加选项<code>-f</code>，即<code>git filter-branch -f</code>，以强制进行修改</li>
<li>如果提交的分支是受保护的，则在提交时会出现<code>remote: GitLab: You are not allowed to force push code to a protected branch on this project.</code>的错误信息，此时，需要调整仓库设置，临时取消对目标分支的保护</li>
</ul>
<h3 id="参考-1"><a href="#参考-1" class="headerlink" title="参考"></a>参考</h3><ul>
<li><a href="https://stackoverflow.com/questions/4493936/could-i-change-my-name-and-surname-in-all-previous-commits" target="_blank" rel="noopener">Could I change my name and surname in all previous commits?</a></li>
</ul>
<h2 id="迁移子分支至新仓库"><a href="#迁移子分支至新仓库" class="headerlink" title="迁移子分支至新仓库"></a>迁移子分支至新仓库</h2><h3 id="场景-2"><a href="#场景-2" class="headerlink" title="场景"></a>场景</h3><p>某个项目仓库中可能存在多个功能特性（features）分支，在一段时候后，基于产品功能规划和开发维护等方面的考虑，<br>需要将某些特性分支独立成新的项目或子项目，将其迁移到新的仓库中。</p>
<h3 id="操作-2"><a href="#操作-2" class="headerlink" title="操作"></a>操作</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Push 'feature-branch' to the branch 'master' (or others) of new repository</span></span><br><span class="line">git push url://to/new/repository.git feature-branch:master</span><br><span class="line"></span><br><span class="line"><span class="comment"># [Optional] Delete the 'feature-branch' from current repository</span></span><br><span class="line">git branch -d feature-branch</span><br><span class="line"></span><br><span class="line"><span class="comment"># Clone codes from new repository</span></span><br><span class="line">git <span class="built_in">clone</span> url://to/new/repository.git feature-branch</span><br></pre></td></tr></table></figure>
<h3 id="参考-2"><a href="#参考-2" class="headerlink" title="参考"></a>参考</h3><ul>
<li><a href="https://stackoverflow.com/questions/2227062/how-do-i-move-a-git-branch-out-into-its-own-repository" target="_blank" rel="noopener">How do I move a Git branch out into its own repository?</a></li>
</ul>
<h2 id="修改历史提交备注信息"><a href="#修改历史提交备注信息" class="headerlink" title="修改历史提交备注信息"></a>修改历史提交备注信息</h2><h3 id="场景-3"><a href="#场景-3" class="headerlink" title="场景"></a>场景</h3><p>在<a href="#拆分子目录到新仓库">拆分子目录</a>和<a href="#迁移子分支至新仓库">迁移子分支</a>两个场景中，<br>在新仓库中的历史提交记录的备注信息可能存在与项目不相关的信息或者包含原始项目中的一些敏感内容。<br>这个时候，就可能需要修改这些备注信息。</p>
<p>当然，也可能是因为发现以前的提交备注中包含错别字或者表达不清晰，为了避免对其他人产生误导或困惑，<br>将提交的备注信息予以纠正也是很有必要的。</p>
<h3 id="操作-3"><a href="#操作-3" class="headerlink" title="操作"></a>操作</h3><ul>
<li>获取提交ID并Rebase到该提交</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># List histories and get the commit id which should be modified</span></span><br><span class="line">git <span class="built_in">log</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Rebase to 3 commits before the specified commit (e.g. 'ce0ac37c83')</span></span><br><span class="line">git rebase --interactive ce0ac37c83~3</span><br></pre></td></tr></table></figure>
<p><img src="/assets/images/git-usage-cases-rebase-to-target-commit.png" alt=""></p>
<ul>
<li>将提交所在行开始处的<code>pick</code>修改为<code>edit</code></li>
</ul>
<p><img src="/assets/images/git-usage-cases-change-history-commit.png" alt=""></p>
<ul>
<li>提交并应用修改</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># New commit message</span></span><br><span class="line">git commit --amend -m <span class="string">"fix that the dragging preview can not be shown"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Apply the changes and return to HEAD</span></span><br><span class="line">git rebase --<span class="built_in">continue</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Push to the branch 'master' of the existing repository</span></span><br><span class="line"><span class="comment">## Make sure that the remote branch 'master' is unprotected</span></span><br><span class="line">git push --force origin master</span><br></pre></td></tr></table></figure>
<p><strong>注意</strong>：</p>
<ul>
<li>如果需要放弃修改，则运行命令<code>git rebase --abort</code></li>
<li>若直接<code>rebase</code>到目标commit，则该提交不会显示在可修改清单内，故，需选择从其之前的第N个（e.g. <code>~3</code>）提交开始</li>
<li>若提交至非空的仓库，需确保目标分支不是受保护（<code>protected</code>）的</li>
<li>在应用修改后，git将从修改位置开始重新构建commit tree，因此，从该位置开始到HEAD的commit id均会发生变化，但原始commit tree依然存在，通过<code>git diff ce0ac37c83</code>等可看到该提交的变更情况</li>
</ul>
<h3 id="参考-3"><a href="#参考-3" class="headerlink" title="参考"></a>参考</h3><ul>
<li><a href="https://stackoverflow.com/questions/179123/how-to-modify-existing-unpushed-commits" target="_blank" rel="noopener">How to modify existing, unpushed commits?</a></li>
</ul>
]]></content>
      
        <categories>
            
            <category> 开发工具 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> git </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Hello world!]]></title>
      <url>/hello-world/</url>
      <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">System.out.println(<span class="string">"Hello world!"</span>);</span><br></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alert(<span class="string">'Hello world!'</span>);</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">"Hello world!"</span></span><br></pre></td></tr></table></figure>
]]></content>
      
        
    </entry>
    
  
  
</search>
